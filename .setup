#!/bin/bash

set -e	# better to exit on an error then to let it fuck shit up

# This script is used to quickly set up my_env on a system that I've cloned the repo into.
# I use this setup across many of the servers, and systems I'm on, because damnit I like
# my setup a whole lot.

# TODO: Add the installation of the necessary software (tmux, vim, git, neovim) so if it isn't already it will be
# Basic usage is simple, clone or download the repo into your home directory, then run this setup script
# FUTURE INSTALL SNIPPET HERE

# set some variables
home=$HOME	# gonna use this throughout

cd "${home}"	# let's go to home directory to do all this work

clear # want to see the output on it's own
printf "\n\n"
echo "========================================="
echo "Setup Started."
echo "========================================="
printf "\n\n"

echo "Cloning the tmux plugin manager into home directory."
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

# check if there is a symlink before copying them, if they are, don't copy, if they are not, then copy
function checkthencopy () 
{
	if [[ -h "${home}/$1" ]]; then
		echo "$1 is already a symlink, skipping cp"
	else
		cp "${home}/$1" "${home}/$1_orig" && { echo "Original $1 successfully copied to $1_orig"; } || { echo "Original $1 not copied. You need to check out why."; }
	fi
}

myenvrootdir="${home}/"

# run checks and copy if needed for backup
checkthencopy .bashrc
checkthencopy .bash_profile
checkthencopy .profile
checkthencopy .vimrc
checkthencopy .config/nvim/init.vim
checkthencopy .tmux.conf

# remove originals
rm ~/.bashrc && { echo "Original .bashrc removed"; } || { echo "Error removing original .bashrc"; }
rm ~/.bash_profile && { echo "Original .bash_profile removed"; } || { echo "Error removing original .bash_profile"; }
rm ~/.profile && { echo "Original .profile removed"; } || { echo "Error removing original .profile"; }
rm ~/.vimrc && { echo "Original .vimrc removed"; } || { echo "Error removing original .vimrc"; }
rm ~/config/nvim/init.vim && { echo "Original init.vim removed"; } || { echo "Error removing original init.vim"; }
rm ~/.tmux.conf && { echo "Original .tmux.conf removed"; } || { echo "Error removing original .tmux.conf"; }

# symlink to my_env files
ln -nfs "${myenvrootdir}my_env/.bashrc" .bashrc && { echo "Symlink to .bashrc in my_env/ successful"; } || { echo "Symlink to my_env/.bashrc not made"; }  
ln -nfs "${myenvrootdir}my_env/.bash_profile" .bash_profile && { echo "Symlink to .bash_profile in my_env/ successful"; } || { echo "Symlink to my_env/.bash_profile not made"; }  
ln -nfs "${myenvrootdir}my_env/.profile" .profile && { echo "Symlink to .profile in my_env/ successful"; } || { echo "Symlink to my_env/.profile not made"; }  
ln -nfs "${myenvrootdir}my_env/.vim/" .vim && { echo "Symlink to .vim in my_env/ successful"; } || { echo "Symlink to my_env/.vim not made"; }
ln -nfs "${myenvrootdir}my_env/.vimrc" .vimrc && { echo "Symlink to .vimrc in my_env/ successful"; } || { echo "Symlink to my_env/.vimrc not made"; }
ln -nfs "${myenvrootdir}my_env/.init.vim" .config/nvim/init.vim && { echo "Symlink to init.vim in my_env/ successful"; } || { echo "Symlink to my_env/.init.vim not made"; }
ln -nfs "${myenvrootdir}my_env/.tmux.conf" .tmux.conf && { echo "Symlink to .tmux.conf in my_env/ successful"; } || { echo "Symlink to my_env/.tmux.conf not made"; }
ln -nfs "${myenvrootdir}my_env/colors/" .config/nvim/colors/ && { echo "Symlink to colors in my_env/ successful"; } || { echo "Symlink to my_env/colors not made"; }

printf "\n\n"
echo "========================================="
echo "Setup Completed."

echo "Couple of things to do before you're all the way done."
echo "1. Remember to install ctags before running vim, this is different on mac than it is on linux."
echo "2. Remember to run :pluginInstall the first time you run vim."

echo "Check the output for any errors and correct manually if needed."
echo "========================================="
printf "\n\n"
